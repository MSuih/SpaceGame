DROP TABLE IF EXISTS NextSituation;
DROP TABLE IF EXISTS OwnedItems;
DROP TABLE IF EXISTS Command;
DROP TABLE IF EXISTS Item;
DROP TABLE IF EXISTS Player;
DROP TABLE IF EXISTS Situation;
DROP TABLE IF EXISTS SystemsForType;
DROP TABLE IF EXISTS System;
DROP TABLE IF EXISTS SystemType;
DROP TABLE IF EXISTS WeaponsForShip;
DROP TABLE IF EXISTS WeaponsForType;
DROP TABLE IF EXISTS Weapon;
DROP TABLE IF EXISTS Ship;
DROP TABLE IF EXISTS ShipType;

CREATE TABLE ShipType (
	id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	maxHealth INT NOT NULL
);

CREATE TABLE SystemType (
	id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(25) NOT NULL,
	maxHealth SMALLINT NOT NULL
);

CREATE TABLE SystemsForType (
	shipType SMALLINT UNSIGNED NOT NULL,
	systemType SMALLINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (shipType) REFERENCES ShipType(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (systemType) REFERENCES SystemType(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	UNIQUE KEY (shipType, systemType)
);

CREATE TABLE Ship (
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	health INT NOT NULL,
	shipType SMALLINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (shipType) REFERENCES ShipType(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT
);

CREATE TABLE Weapon (
	id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(25) NOT NULL,
	damage INT UNSIGNED NOT NULL
);

CREATE TABLE WeaponsForShip (
	ship INT UNSIGNED NOT NULL,
	weapon SMALLINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (ship) REFERENCES Ship(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (weapon) REFERENCES Weapon(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT
);

CREATE TABLE WeaponsForType (
	shipType SMALLINT UNSIGNED NOT NULL,
	weapon SMALLINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (shipType) REFERENCES ShipType(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (weapon) REFERENCES Weapon(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT
);

CREATE TABLE System (
	id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	health SMALLINT NOT NULL,
	ship INT UNSIGNED NOT NULL,
	systemType SMALLINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (ship) REFERENCES Ship(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (systemType) REFERENCES SystemType(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	UNIQUE KEY (ship, systemType)
);

CREATE TABLE Situation (
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	description TEXT NOT NULL,
	endText TEXT,
	enemy SMALLINT UNSIGNED,
	
	FOREIGN KEY (enemy) REFERENCES ShipType(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT
);

CREATE TABLE Item (
	id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(25) NOT NULL,
	visible BIT NOT NULL DEFAULT 1
);

CREATE TABLE Player (
	id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(10) NOT NULL,
	lastName VARCHAR(15) NOT NULL,
	money MEDIUMINT UNSIGNED NOT NULL DEFAULT 0,
	situation INT UNSIGNED NOT NULL DEFAULT 1,
	ship INT UNSIGNED NOT NULL,
	lastEncounter INT UNSIGNED,
	
	FOREIGN KEY (situation) REFERENCES Situation(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	FOREIGN KEY (ship) REFERENCES Ship(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	FOREIGN KEY (lastEncounter) REFERENCES Ship(id)
		ON UPDATE CASCADE
		ON DELETE SET NULL
);

CREATE TABLE OwnedItems (
	player SMALLINT UNSIGNED NOT NULL,
	item SMALLINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (player) REFERENCES Player(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (item) REFERENCES Item(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE
);

CREATE TABLE Command (
	id TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	command VARCHAR(15) NOT NULL UNIQUE
);

CREATE TABLE NextSituation (
	fromSituation INT UNSIGNED NOT NULL,
	command TINYINT UNSIGNED NOT NULL,
	target VARCHAR(15),
	toSituation INT UNSIGNED,
	description TEXT,
	requires SMALLINT UNSIGNED,
	requiredAmount TINYINT UNSIGNED NOT NULL DEFAULT 0,
	removeItem BIT NOT NULL DEFAULT 1,
	rewards SMALLINT UNSIGNED,
	rewardedAmount TINYINT UNSIGNED NOT NULL DEFAULT 0,
	
	FOREIGN KEY (fromSituation) REFERENCES Situation(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	FOREIGN KEY (command) REFERENCES Command(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	FOREIGN KEY (toSituation) REFERENCES Situation(id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	FOREIGN KEY (requires) REFERENCES Item(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT,
	FOREIGN KEY (rewards) REFERENCES Item(id)
		ON UPDATE CASCADE
		ON DELETE RESTRICT
);